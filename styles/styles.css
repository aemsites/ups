/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

:root {
  /* tokens */
  --gray: #5f5753;
  --gray-light: #8c857e;
  --gray-lighter: #f2f1ef;
  --brown: #351c15;
  --tan: #bfb8af;
  --tan-light: #f2f1ef;
  --tan-lighter: #dfdbd7;
  --brown-gradient: linear-gradient(18.83deg, #7e5844 37.21%, #69422d 100%);
  --gold: #ffc400;
  --gold-light: #ffd64c;
  --blue: #0662bb;
  --blue-dark: #0056b3;
  --blue-darker: #105497;
  --blue-gradient: linear-gradient(304.78deg, #326a9f -12.16%, #397ab7 61.1%);

  /* colors */
  --background-color: white;
  --text-color: #121212;
  --link-color: var(--blue);
  --link-hover-color: var(--blue-darker);
  --light-color: var(--tan-light);
  --dark-color: var(--brown);

  /* fonts */
  --body-font-family: roboto, roboto-fallback, sans-serif;
  --heading-font-family: var(--body-font-family);
  --code-font-family: monospace;

  /* body sizes */
  --body-font-size-m: 1rem;
  --body-font-size-s: 0.875rem;
  --body-font-size-xs: 0.75rem;

  /* heading sizes */
  --heading-font-size-xxl: 2.5rem;
  --heading-font-size-xl: 2rem;
  --heading-font-size-l: 1.75rem;
  --heading-font-size-m: 1.5rem;
  --heading-font-size-s: 1.25rem;
  --heading-font-size-xs: 1rem;

  /* header height */
  --header-height: 164px;
}

/* fallback fonts */
@font-face {
  font-family: roboto-fallback;
  size-adjust: 99.539%;
  src: local('Arial');
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  display: none;
  margin: 0;
  font-family: var(--body-font-family);
  font-size: var(--body-font-size-m);
  line-height: 1.2;
  background-color: var(--background-color);
  color: var(--text-color);
}

body.appear {
  display: block;
}

body[data-scroll='disabled'] {
  overflow-y: hidden;
}

header {
  min-height: var(--header-height);
}

main {
  max-width: 1400px;
  margin: auto;
}

/* sections */
main > .section {
  max-width: 1400px;
  margin: 5rem 1.5rem;
}

/* images and icons */
p.img-wrapper {
  margin: 0;
  line-height: 0;
}

img {
  display: block;
  width: 100%;
  height: auto;
}

.icon svg,
.icon img {
  display: inline-block;
  width: auto;
  height: 1em;
  fill: currentcolor;
  color: currentcolor;
}

i.symbol {
  display: inline-block;
  position: relative;
  width: 1em;
  height: 1em;
  vertical-align: middle;
  color: currentcolor;
}

i.symbol::before,
i.symbol::after {
  content: '';
  position: absolute;
}

i.symbol-close::after,
i.symbol-close::before {
  top: calc(50% - 1px);
  left: 0;
  transform: rotate(45deg);
  width: 100%;
  height: 2px;
  background-color: currentcolor;
}

i.symbol-close::after {
  transform: rotate(-45deg);
}

/* typography */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  scroll-margin: 1rem;
  font-family: var(--heading-font-family);
  font-weight: 400;
  line-height: 1.25;
}

h1 {
  font-size: var(--heading-font-size-xxl);
}

h2 {
  font-size: var(--heading-font-size-xl);
}

h3 {
  font-size: var(--heading-font-size-l);
}

h4 {
  font-size: var(--heading-font-size-m);
}

h5 {
  font-size: var(--heading-font-size-s);
}

h6 {
  font-size: var(--heading-font-size-xs);
}

h1 u,
h2 u,
h3 u,
h4 u,
h5 u,
h6 u {
  text-decoration: none;
}

h1 u::after,
h2 u::after,
h3 u::after,
h4 u::after,
h5 u::after,
h6 u::after {
  content: '';
  display: block;
  width: 5rem;
  height: 0.25rem;
  margin: 1.25rem 0 0;
  background-color: var(--gold);
}

p,
ol,
ul,
dl,
pre,
blockquote {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}

pre,
code,
kbd,
samp,
var {
  font-family: var(--code-font-family);
  font-size: var(--body-font-size-m);
}

pre {
  padding: 1.5rem;
  background-color: var(--light-color);
  overflow-x: auto;
}

code,
kbd,
samp,
var {
  padding: 0 0.25rem;
  background-color: var(--light-color);
}

sup,
sub {
  font-size: x-small;
}

del {
  position: absolute;
  width: 0;
  height: 0;
  margin: 0;
  border: 0;
  padding: 0;
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
  white-space: nowrap;
}

/* links */
a:any-link {
  color: var(--link-color);
}

a:hover {
  color: var(--link-hover-color);
}

/* buttons */
.button-wrapper {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem 0.75rem;
  margin: 1rem 0;
}

a.button,
button.button {
  display: inline-block;
  width: 100%;
  max-width: 100%;
  border: 1px solid var(--gold);
  border-radius: 2.5rem;
  padding: 0.625rem 1.5rem;
  background-color: var(--gold);
  color: var(--text-color);
  font-size: inherit;
  font-weight: 500;
  text-align: center;
  text-decoration: none;
  transition: border-color 0.35s, background-color 0.35s, color 0.35s;
  cursor: pointer;
}

@media (width >= 700px) {
  a.button,
  button.button {
    width: unset;
  }
}

a.button:hover,
button.button:hover,
button.button:focus {
  border-color: var(--gold-light);
  background-color: var(--gold-light);
  text-decoration: underline;
}

button.button:disabled,
button.button:disabled:hover,
button.button:disabled:focus {
  border-color: lightgray;
  background-color: lightgray;
  color: gray;
  cursor: not-allowed;
}

a.button.emphasis,
button.button.emphasis {
  border-color: var(--brown);
  background-color: var(--brown);
  color: var(--background-color);
}

a.button.emphasis:hover,
button.button.emphasis:hover,
button.button.emphasis:focus {
  border-color: var(--text-color);
  background-color: var(--text-color);
}

a.button.outline,
button.button.outline {
  border-color: var(--link-color);
  background-color: transparent;
  color: var(--link-color);
}

a.button.outline:hover,
button.button.outline:hover,
button.button.outline:focus {
  border-color: var(--link-hover-color);
  color: var(--link-hover-color);
}

button.button.outline:disabled,
button.button.outline:disabled:hover,
button.button.outline:disabled:focus {
  border-color: lightgray;
  background-color: var(--background-color);
  color: gray;
}

/* form elements */
input,
textarea,
select,
button {
  max-width: 100%;
  font: inherit;
  transition: border-color 0.35s;
}

input,
textarea,
select {
  width: 100%;
  border: 2px solid var(--gray-light);
  border-radius: 0.25rem;
  padding: 0.75rem;
  color: inherit;
  transition: outline 0.35s;
}

input:focus,
textarea:focus,
select:focus {
  outline: 1px solid var(--gray-light);
}

input::placeholder,
textarea::placeholder {
  color: var(--gray-light);
}

button,
fieldset {
  appearance: none;
  margin: 0;
  border: 0;
  padding: 0;
  background-color: transparent;
}

button {
  cursor: pointer;
}

/* section metadata */
main .section.light {
  padding: 1.5rem;
  background-color: gray;
}

main .section.dark {
  padding: 1.5rem;
  background-color: darkgray;
}

main .section.cta {
  padding: 1.5rem;
  background: var(--blue-gradient);
  color: var(--background-color);
}

@media (width >= 700px) {
  main .section.cta {
    padding: 1.5rem 2rem;
  }

  main .section.cta > div {
    display: grid;
    grid-template-columns: 72% 1fr;
  }

  main .section.cta > div * {
    grid-column: 1;
  }

  main .section.cta > div .button-wrapper {
    align-self: center;
    justify-content: flex-end;
    grid-row: 1 / span 2;
    grid-column: 2;
  }
}

main .section.link-list ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

main .section.link-list a {
  display: block;
  padding: 1.25rem 0;
  font-weight: 500;
  text-decoration: none;
}

main .section.link-list a::after {
  content: '';
  display: inline-block;
  width: 9px;
  height: 9px;
  transform: rotate(45deg);
  margin-left: 0.25rem;
  border: 2px solid currentcolor;
  border-left-color: transparent;
  border-bottom-color: transparent;
  border-radius: 2px;
  transition: margin-left 0.3s;
}

main .section.link-list a:hover::after {
  margin-left: 0.5rem;
}

main .section.link-list ul li + li {
  border-top: 1px solid var(--tan-lighter);
}

@media (width >= 700px) {
  main .section.link-list ul {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 0 1.5rem;
  }

  main .section.link-list li:nth-child(2) {
    border-top: 0;
  }
}

@media (width >= 1200px) {
  main .section.link-list ul {
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 0 2rem;
  }

  main .section.link-list li:nth-child(3) {
    border-top: 0;
  }
}
